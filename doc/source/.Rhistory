lines(dat$time, dat$PQ, col="brown")
axis(side=1, at=c(0:23))
plot(forecast(fit), col="blue")
lines(dat$time, dat$PQ, col="brown")
axis(side=2, at=c(0:23))
plot(forecast(fit), col="blue")
lines(dat$time, dat$PQ, col="brown")
axis(side=1, at=c(0:23))
plot(forecast(fit), col="blue", xlab="Month")
lines(dat$time, dat$PQ, col="brown")
axis(side=1, at=c(0:23))
plot(forecast(fit), col="blue", xlab="Month", ylab="Power (kW")
lines(dat$time, dat$PQ, col="brown")
axis(side=1, at=c(0:23))
abline(v=c(14,16), col='red')
text(15, -50, "Prediction vs. Real")
fit <- auto.arima(dat$PQ[1:13], max.p = 20, max.q = 20, max.d = 2, ic = "aic")
plot(forecast(fit), col="blue", xlab="Month", ylab="Power (kW")
lines(dat$time, dat$PQ, col="brown")
axis(side=1, at=c(0:23))
abline(v=c(14,16), col='red')
text(15, -50, "Prediction vs. Real")
plot(forecast(fit), col="blue", xlab="Month", ylab="Power (kW")
lines(dat$PQ, col="brown")
axis(side=1, at=c(0:23))
abline(v=c(14,16), col='red')
text(15, -50, "Prediction vs. Real")
plot(forecast(fit), col="blue", xlab="Ordinal month", ylab="Power (kW")
lines(dat$PQ, col="brown")
axis(side=1, at=c(0:23))
abline(v=c(14,16), col='red')
text(15, -50, "Prediction vs. Real")
data %>%
ggplot(aes(x = time, y = Wat1)) +
geom_line(color="blue") +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
xlab("Month") +
ylab("Power (kW)") +
ggtitle("Wat1 demand charge power (kW)") +
theme_bw() +
theme_minimal(base_size = 14)
fit <- auto.arima(dat$Wat1[1:13], max.p = 20, max.q = 20, max.d = 2, ic = "aic")
plot(forecast(fit), col="blue", xlab="Ordinal month", ylab="Power (kW)")
lines(dat$Wat1, col="brown")
abline(v=c(14,16), col='red')
text(15, 325, "Prediction vs. Real")
plot(forecast(fit), col="blue", xlab="Ordinal month", ylab="Power (kW)")
lines(dat$Wat1, col="brown")
abline(v=c(14,16), col='red')
axis(side=1, at=c(0:23))
text(15, 325, "Prediction vs. Real")
d <- density(data$PQ, adjust = 1, na.rm = TRUE)
plot(d, main="KDE for PQ power (kW)", xlab='Power (kW)', col="red") # simple plot
d <- density(data$Wat1, adjust = 1, na.rm = TRUE)
plot(d, main="KDE for Wat1 power (kW)", xlab='Power (kW)', col='red') # simple plot
fit <- auto.arima(dat$Wat1[1:13], max.p = 20, max.q = 20, max.d = 2, ic = "aic")
plot(forecast(fit), col="blue", xlab="Ordinal month", ylab="Power (kW)")
lines(dat$Wat1, col="brown")
abline(v=c(14,16), col='red')
axis(side=1, at=c(0:23))
text(15, 325, "Prediction vs. Real")
data %>%
ggplot(aes(x = time, y = Wat2)) +
geom_line(color="blue") +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
xlab("Month (2017 - 2019)") +
ylab("Power (kW)") +
ggtitle("Wat2 demand charge power (kW)") +
theme_bw() +
theme_minimal(base_size = 14)
fit <- auto.arima(dat$Wat2[1:13], max.p = 20, max.q = 20, max.d = 2, ic = "aic")
plot(forecast(fit), col="blue",xlab="Ordinal month", ylab="Power (kW)")
lines(dat$Wat2, col="brown")
axis(side=1, at=c(0:23))
abline(v=c(14,16), col='red')
text(15, -40, "Prediction vs. Real")
data %>%
ggplot(aes(x = time, y = Wat3)) +
geom_line(color="blue") +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
xlab("Month (2017 - 2019)") +
ylab("Power (kW)") +
ggtitle("Wat3 demand charge power (kW)") +
theme_bw() +
theme_minimal(base_size = 14)
fit <- auto.arima(dat$Wat3[1:13], max.p = 20, max.q = 20, max.d = 2, ic = "aic")
plot(forecast(fit), col="blue",xlab="Ordinal month", ylab="Power (kW)")
lines(dat$Wat3, col="brown")
axis(side=1, at=c(0:23))
abline(v=c(14,16), col='red')
text(15, 0, "Prediction vs. Real")
```{r}
data <- read_csv(file = "day.csv")
data %>%
ggplot(aes(x = time, y = PQ)) +
geom_line(color="blue") +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
xlab("Month (2017 - 2019)") +
ylab("Power (kW)") +
ggtitle("PQ demand charge power (kW)") +
theme_bw() +
theme_minimal(base_size = 14)
data %>%
ggplot(aes(x = time, y = PQ)) +
geom_line(color="blue") +
scale_x_date(date_breaks = "1 dat", date_labels = "%b") +
xlab("Month (2017 - 2019)") +
ylab("Power (kW)") +
ggtitle("PQ demand charge power (kW)") +
theme_bw() +
theme_minimal(base_size = 14)
data %>%
ggplot(aes(x = time, y = PQ)) +
geom_line(color="blue") +
scale_x_date(date_breaks = "1 day", date_labels = "%b") +
xlab("Month (2017 - 2019)") +
ylab("Power (kW)") +
ggtitle("PQ demand charge power (kW)") +
theme_bw() +
theme_minimal(base_size = 14)
data %>%
ggplot(aes(x = time, y = PQ)) +
geom_line(color="blue") +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
xlab("Month (2017 - 2019)") +
ylab("Power (kW)") +
ggtitle("PQ demand charge power (kW)") +
theme_bw() +
theme_minimal(base_size = 14)
dat <- data.frame(data) %>%
drop_na()
fit <- auto.arima(dat$PQ[1:404], max.p = 20, max.q = 20, max.d = 2, ic = "aic")
plot(forecast(fit))
plot(forecast(fit))
lines(dat$PQ, col="brown")
axis(side=1, at=c(0:23))
abline(v=c(404,413), col='red')
text(350, 150, "Prediction vs. Real")
plot(forecast(fit))
lines(dat$PQ, col="brown")
axis(side=1, at=c(0:416))
abline(v=c(404,413), col='red')
text(350, 150, "Prediction vs. Real")
plot(forecast(fit))
lines(dat$PQ, col="brown")
axis(side=10, at=c(0:416))
seq(1:10, 3)
seq(1:10, 1)
seq(1:10)
seq(1:10, by =1)
seq(1,10, by =3)
plot(forecast(fit))
lines(dat$PQ, col="brown")
axis(side=1, at=c(seq(0,416, by=10)))
abline(v=c(404,413), col='red')
text(350, 150, "Prediction vs. Real")
plot(forecast(fit))
lines(dat$PQ, col="brown")
axis(side=1, at=c(seq(0,416, by=30)))
abline(v=c(404,413), col='red')
text(350, 150, "Prediction vs. Real")
plot(forecast(fit))
lines(dat$PQ, col="brown")
axis(side=1, at=c(seq(0,416, by=50)))
abline(v=c(404,413), col='red')
text(350, 150, "Prediction vs. Real")
plot(forecast(fit))
lines(dat$PQ, col="brown")
axis(side=1, at=c(seq(0,416, by=20)))
abline(v=c(404,413), col='red')
text(350, 150, "Prediction vs. Real")
plot(forecast(fit))
lines(dat$PQ, col="brown")
axis(side=1, at=c(seq(0,416, by=25)))
abline(v=c(404,413), col='red')
text(350, 150, "Prediction vs. Real")
plot(forecast(fit),xlab="Ordinal day", ylab="Power (kW)")
lines(dat$PQ, col="brown")
axis(side=1, at=c(seq(0,416, by=25)))
abline(v=c(404,413), col='red')
text(350, 150, "Prediction vs. Real")
plot(forecast(fit),xlab="Ordinal day", ylab="Power (kW)")
axis(side=1, at=c(seq(0,416, by=25)))
lines(dat$PQ, col="brown")
abline(v=c(404,413), col='red')
text(350, 150, "Prediction vs. Real")
fit <- auto.arima(dat$PQ[1:404], max.p = 20, max.q = 20, max.d = 2, ic = "aic")
plot(forecast(fit),xlab="Ordinal day", ylab="Power (kW)")
axis(side=1, at=c(seq(0,416, by=25)))
lines(dat$PQ, col="brown")
abline(v=c(404,413), col='red')
text(350, 150, "Prediction vs. Real")
fit <- auto.arima(dat$Wat2[1:404], max.p = 20, max.q = 20, max.d = 2, ic = "aic")
plot(forecast(fit),xlab="Ordinal day", ylab="Power (kW)")
axis(side=1, at=c(seq(0,416, by=25)))
lines(dat$Wat2, col='brown')
abline(v=c(404,413), col='red')
text(350, 7, "Prediction vs. Real")
plot(forecast(fit),xlab="Ordinal day", ylab="Power (kW)")
axis(side=1, at=c(seq(0,416, by=25)))
lines(dat$Wat3, col='brown')
abline(v=c(404,413), col='red')
text(350, 20, "Prediction vs. Real")
plot(forecast(fit), col="blue", xlab="Ordinal month since Nov. 2017", ylab="Power (kW)")
lines(dat$PQ, col="brown")
axis(side=1, at=c(0:23))
abline(v=c(14,16), col='red')
text(15, -50, "Prediction vs. Real")
dat <- data.frame(data) %>%
drop_na()
data <- read_csv(file = "month.csv")
fit <- auto.arima(dat$Wat1[1:13], max.p = 20, max.q = 20, max.d = 2, ic = "aic")
plot(forecast(fit), col="blue", xlab="Ordinal month", ylab="Power (kW)")
lines(dat$Wat1, col="brown")
abline(v=c(14,16), col='red')
axis(side=1, at=c(0:23))
text(15, 325, "Prediction vs. Real")
dat <- data.frame(data) %>%
drop_na()
fit <- auto.arima(dat$PQ[1:13], max.p = 20, max.q = 20, max.d = 2, ic = "aic")
plot(forecast(fit), col="blue", xlab="Ordinal month since Nov. 2017", ylab="Power (kW)")
lines(dat$PQ, col="brown")
axis(side=1, at=c(0:23))
abline(v=c(14,16), col='red')
text(15, -50, "Prediction vs. Real")
data <- read_csv(file = "df.csv") %>%
mutate(time = as.POSIXct(time, format="%m/%d/%Y %H:%M"))
data["year"] <- year(data[["time"]])
data["year"] <- year(data[["time"]])
data["month"] <- month(data[["time"]])
data["month"] <- month(data[["time"]])
data <- data %>%
group_by(year, month) %>%
summarise(PQ_e = sum(PQ,na.rm=T)/60, Wat1_e = sum(Wat1,na.rm=T)/60, Wat2_e = sum(Wat2,na.rm=T)/60,
Wat3_e = sum(Wat3,na.rm=T)/60, Tot_kwh = PQ_e+Wat1_e+Wat2_e+Wat3_e) %>%
mutate(month_ = sprintf("%02d", month),
time = ymd(str_c(year, month_,"01"))) %>%
select(time, PQ_e, Wat1_e, Wat2_e, Wat3_e, Tot_kwh)
data["month"] <- month(data[["time"]])
data <- data %>%
group_by(year, month) %>%
summarise(PQ_e = sum(PQ,na.rm=T)/60, Wat1_e = sum(Wat1,na.rm=T)/60, Wat2_e = sum(Wat2,na.rm=T)/60,
Wat3_e = sum(Wat3,na.rm=T)/60, Tot_kwh = PQ_e+Wat1_e+Wat2_e+Wat3_e) %>%
mutate(month_ = sprintf("%02d", month),
time = ymd(str_c(year, month_,"01"))) %>%
select(time, PQ_e, Wat1_e, Wat2_e, Wat3_e, Tot_kwh)
data <- read_csv(file = "15m.csv") %>%
drop_na() %>%
mutate(total_v = PQ+Wat1+Wat2+Wat3)
data["year"] <- year(data[["time"]])
data["month"] <- month(data[["time"]])
data["day"] <- day(data[["time"]])
data["hour"] <- hour(data[["time"]])
data["minute"] <- minute(data[["time"]])
data <- data %>%
group_by(year, month) %>%
summarise(PQ = max(PQ,na.rm=T), Wat1 = max(Wat1,na.rm=T), Wat2 = max(Wat2,na.rm=T),
Wat3 = max(Wat3,na.rm=T), total_v = max(total_v, na.rm=T), Tot_kw = PQ+Wat1+Wat2+Wat3) %>%
mutate(month_ = sprintf("%02d", month),
time = ymd(str_c(year, month_, "01"))) %>%
select(time, PQ, Wat1, Wat2, Wat3, total_v, Tot_kw)
dmd <- data[c(-1)]
data <- dmd %>% inner_join(pwr, by="time")
data %>%
ggplot(aes(x = time, y = total_v, color = "virtual meter")) +
geom_line() +
geom_line(aes(y = Tot_kw, color = "aggregated 4 meters"))+
scale_color_manual(name = "Peak power (kW):", values = c("virtual meter" = "red",
"aggregated 4 meters" = "blue"))+
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
xlab("Month (2017 - 2019)") +
ylab("Power (kW)") +
ggtitle("Montly peak demand (kW)") +
theme_bw() +
theme_minimal(base_size = 14)
d <- density(data$total_v, adjust = 1, na.rm = TRUE)
d_kw <- density(data$Tot_kw, adjust = 1, na.rm = TRUE)
plot(d, main="KDE for peak power (kW)", xlab='Power (kW)', col="red")
lines(d_kw, col="blue")
library(forecast)
fit <- auto.arima(data$total_v[1:13], max.p = 20, max.q = 20, max.d = 2, ic = "aic")
fit_kw <- auto.arima(data$Tot_kw[1:13], max.p = 20, max.q = 20, max.d = 2, ic = "aic")
plot(forecast(fit), main = "Vitual meter forecast", col="blue")
lines(data$total_v, col="brown")
abline(v=c(14,16), col='red')
text(15, 200, "Prediction vs. Real")
plot(forecast(fit), main = "Vitual meter forecast", col="blue",
xlab="Ordinal month since Nov. 2017", ylab="Power (kW)")
axis(side=1, at=c(0:23))
lines(data$total_v, col="brown")
abline(v=c(14,16), col='red')
text(15, 200, "Prediction vs. Real")
plot(forecast(fit_kw), main="Forecast for aggregated 4 meters", col="blue",
xlab="Ordinal month since Nov. 2017", ylab="Power (kW)")
lines(data$Tot_kw, col="brown")
axis(side=1, at=c(0:23))
abline(v=c(14,16), col='red')
text(15, 200, "Prediction vs. Real")
ad_G2 = 30
kwh_G2 = 0.06256+0.09207
kw_G2 = 14.29
ad_G3 = 295
kw_G3 = 22.86
chrg <- data %>%
mutate(charge_G2= Tot_kw*kw_G2 + Tot_kwh*kwh_G2 + ad_G2*4,
charge_G3= total_v*kw_G3 + Tot_kwh*kwh_G3 + ad_G3,
saving = charge_G2 - charge_G3)
plot(chrg$time, chrg$Tot_kwh/1000, main="Monthly energy consumption (MWh)", type="l", xlab='Month',
col="black", ylim=c(0,400), ylab="Power consumption (MWh)", xaxt="n")
lines(chrg$time,chrg$Wat1_e/1000, col="blue")
lines(chrg$time,chrg$PQ_e/1000, col="red")
lines(chrg$time,chrg$Wat3_e/1000, col="brown")
lines(chrg$time,chrg$Wat2_e/1000, col="gold")
legend('topright', legend=c("Total", "Wat1","PQ","Wat3","Wat2"),
col=c("black","blue","red","brown","gold"), lty=1)
plot(chrg$time, chrg$Tot_kwh/1000, main="Monthly energy consumption (MWh)", type="l", xlab='Month',
col="black", ylim=c(0,400), ylab="Power consumption (MWh)", xaxt="n")
lines(chrg$time,chrg$Wat1_e/1000, col="blue")
lines(chrg$time,chrg$PQ_e/1000, col="red")
lines(chrg$time,chrg$Wat3_e/1000, col="brown")
lines(chrg$time,chrg$Wat2_e/1000, col="gold")
axis(side=1, at=c(0:23))
legend('topright', legend=c("Total", "Wat1","PQ","Wat3","Wat2"),
col=c("black","blue","red","brown","gold"), lty=1)
plot(chrg$time, chrg$Tot_kwh/1000, main="Monthly energy consumption (MWh)", type="l", xlab='Month',
col="black", ylim=c(0,400), ylab="Power consumption (MWh)", xaxt="n")
lines(chrg$time,chrg$Wat1_e/1000, col="blue")
lines(chrg$time,chrg$PQ_e/1000, col="red")
lines(chrg$time,chrg$Wat3_e/1000, col="brown")
lines(chrg$time,chrg$Wat2_e/1000, col="gold")
axis.Date(side=1, chrg$time, at=c(0:23))
plot(chrg$time, chrg$Tot_kwh/1000, main="Monthly energy consumption (MWh)", type="l", xlab='Month',
col="black", ylim=c(0,400), ylab="Power consumption (MWh)", xaxt="n")
lines(chrg$time,chrg$Wat1_e/1000, col="blue")
lines(chrg$time,chrg$PQ_e/1000, col="red")
lines(chrg$time,chrg$Wat3_e/1000, col="brown")
lines(chrg$time,chrg$Wat2_e/1000, col="gold")
axis.Date(side=1, chrg$time, "days")
str(chrg)
plot(chrg$time, chrg$Tot_kwh/1000, main="Monthly energy consumption (MWh)", type="l", xlab='Month',
col="black", ylim=c(0,400), ylab="Power consumption (MWh)", xaxt="n")
lines(chrg$time,chrg$Wat1_e/1000, col="blue")
lines(chrg$time,chrg$PQ_e/1000, col="red")
lines(chrg$time,chrg$Wat3_e/1000, col="brown")
lines(chrg$time,chrg$Wat2_e/1000, col="gold")
axis.Date(side=1, at=chrg$time, labels=format(chrg$time, "%b-%d"),las=2)
legend('topright', legend=c("Total", "Wat1","PQ","Wat3","Wat2"),
col=c("black","blue","red","brown","gold"), lty=1)
plot(chrg$time, chrg$Tot_kwh/1000, main="Monthly energy consumption (MWh)", type="l", xlab='Month',
col="black", ylim=c(0,400), ylab="Power consumption (MWh)", xaxt="n")
lines(chrg$time,chrg$Wat1_e/1000, col="blue")
lines(chrg$time,chrg$PQ_e/1000, col="red")
lines(chrg$time,chrg$Wat3_e/1000, col="brown")
lines(chrg$time,chrg$Wat2_e/1000, col="gold")
axis.Date(side=1, at=chrg$time, labels=format(chrg$time, "%b"),las=2)
legend('topright', legend=c("Total", "Wat1","PQ","Wat3","Wat2"),
col=c("black","blue","red","brown","gold"), lty=1)
plot(chrg$time, chrg$Tot_kwh/1000, main="Monthly energy consumption (MWh)", type="l", xlab='Month',
col="black", ylim=c(0,400), ylab="Power consumption (MWh)", xaxt="n")
lines(chrg$time,chrg$Wat1_e/1000, col="blue")
lines(chrg$time,chrg$PQ_e/1000, col="red")
lines(chrg$time,chrg$Wat3_e/1000, col="brown")
lines(chrg$time,chrg$Wat2_e/1000, col="gold")
axis.Date(side=1, at=chrg$time, labels=format(chrg$time, "%b"))
legend('topright', legend=c("Total", "Wat1","PQ","Wat3","Wat2"),
col=c("black","blue","red","brown","gold"), lty=1)
plot(chrg$time, chrg$Tot_kwh/1000, main="Monthly energy consumption (MWh)", type="l", xlab='Month',
col="black", ylim=c(0,400), ylab="Power consumption (MWh)")
lines(chrg$time,chrg$Wat1_e/1000, col="blue")
lines(chrg$time,chrg$PQ_e/1000, col="red")
lines(chrg$time,chrg$Wat3_e/1000, col="brown")
lines(chrg$time,chrg$Wat2_e/1000, col="gold")
axis.Date(side=1, at=chrg$time, labels=format(chrg$time, "%b"))
legend('topright', legend=c("Total", "Wat1","PQ","Wat3","Wat2"),
col=c("black","blue","red","brown","gold"), lty=1)
plot(chrg$time, chrg$Tot_kwh/1000, main="Monthly energy consumption (MWh)", type="l", xlab='Month',
col="black", ylim=c(0,400), ylab="Power consumption (MWh)")
lines(chrg$time,chrg$Wat1_e/1000, col="blue")
lines(chrg$time,chrg$PQ_e/1000, col="red")
lines(chrg$time,chrg$Wat3_e/1000, col="brown")
lines(chrg$time,chrg$Wat2_e/1000, col="gold")
legend('topright', legend=c("Total", "Wat1","PQ","Wat3","Wat2"),
col=c("black","blue","red","brown","gold"), lty=1)
plot(chrg$time, chrg$Tot_kwh/1000, main="Monthly energy consumption (MWh)", type="l", xlab='Month',
col="black", ylim=c(0,400), ylab="Power consumption (MWh)", xaxt="n")
lines(chrg$time,chrg$Wat1_e/1000, col="blue")
lines(chrg$time,chrg$PQ_e/1000, col="red")
lines(chrg$time,chrg$Wat3_e/1000, col="brown")
lines(chrg$time,chrg$Wat2_e/1000, col="gold")
axis.Date(side=1, at=chrg$time, labels=format(chrg$time, "%b"))
legend('topright', legend=c("Total", "Wat1","PQ","Wat3","Wat2"),
col=c("black","blue","red","brown","gold"), lty=1)
plot(chrg$time, chrg$Tot_kwh/1000, main="Monthly energy consumption (MWh)", type="l",
xlab='Month (2017 - 2019)', col="black", ylim=c(0,400), ylab="Power consumption (MWh)", xaxt="n")
lines(chrg$time,chrg$Wat1_e/1000, col="blue")
lines(chrg$time,chrg$PQ_e/1000, col="red")
lines(chrg$time,chrg$Wat3_e/1000, col="brown")
lines(chrg$time,chrg$Wat2_e/1000, col="gold")
axis.Date(side=1, at=chrg$time, labels=format(chrg$time, "%b"))
legend('topright', legend=c("Total", "Wat1","PQ","Wat3","Wat2"),
col=c("black","blue","red","brown","gold"), lty=1)
chrg %>%
ggplot(aes(x = time, y = charge_G3/ 1000, color="Virtual meter")) +
geom_line() +
geom_line(aes(y = charge_G2/ 1000, color="4 meters")) +
xlab("Monthly billing cycle") +
ylab("Monthly charge ($)") +
scale_color_manual(name = "Elec. Cost:", values = c("Virtual meter" = "red","4 meters" = "blue"))+
ggtitle("Electricity cost ($1K)") +
theme_bw() +
theme_minimal(base_size = 14)
chrg %>%
ggplot(aes(x = time, y = charge_G3/ 1000, color="Virtual meter")) +
geom_line() +
geom_line(aes(y = charge_G2/ 1000, color="4 meters")) +
xlab("Monthly billing cycle") +
ylab("Monthly charge ($1K)") +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_color_manual(name = "Elec. Cost:", values = c("Virtual meter" = "red","4 meters" = "blue"))+
ggtitle("Electricity cost ($1K)") +
theme_bw() +
theme_minimal(base_size = 14)
chrg %>%
ggplot(aes(x = time, y = charge_G3/ 1000, color="Virtual meter")) +
geom_line() +
geom_line(aes(y = charge_G2/ 1000, color="4 meters")) +
xlab("Monthly billing cycle (2017 - 2019)") +
ylab("Monthly charge ($1K)") +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_color_manual(name = "Elec. Cost:", values = c("Virtual meter" = "red","4 meters" = "blue"))+
ggtitle("Electricity cost ($1K)") +
theme_bw() +
theme_minimal(base_size = 14)
chrg %>%
ggplot(aes(x = time, y = charge_G3/ 1000, color="Virtual meter")) +
geom_line() +
geom_line(aes(y = charge_G2/ 1000, color="4 meters")) +
geom_line(aes(y = saving/ 1000, color="Savings")) +
xlab("Monthly billing cycle (2017 - 2019)") +
ylab("Monthly charge ($1K)") +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_color_manual(name = "Elec. Cost:", values = c("Virtual meter" = "red","4 meters" = "blue",
"Savings" = "Gold"))+
ggtitle("Electricity cost ($1K)") +
theme_bw() +
theme_minimal(base_size = 14)
chrg %>%
ggplot(aes(x = time, y = charge_G3/ 1000, color="Virtual meter")) +
geom_line() +
geom_line(aes(y = charge_G2/ 1000, color="4 meters")) +
geom_line(aes(y = saving/ 1000, color=" Savings")) +
xlab("Monthly billing cycle (2017 - 2019)") +
ylab("Monthly charge ($1K)") +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_color_manual(name = "Elec. Cost:", values = c("Virtual meter" = "red","4 meters" = "blue",
" Savings" = "Gold"))+
ggtitle("Electricity cost ($1K)") +
theme_bw() +
theme_minimal(base_size = 14)
chrg %>%
ggplot(aes(x = time, y = charge_G3/ 1000, color="A virtual meter")) +
geom_line() +
geom_line(aes(y = charge_G2/ 1000, color="4 meters")) +
geom_line(aes(y = saving/ 1000, color="Savings")) +
xlab("Monthly billing cycle (2017 - 2019)") +
ylab("Monthly charge ($1K)") +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_color_manual(name = "Elec. Cost:", values = c("A virtual meter" = "red","4 meters" = "blue",
"Savings" = "Gold"))+
ggtitle("Electricity cost ($1K)") +
theme_bw() +
theme_minimal(base_size = 14)
max(chrg$saving)
which(max(chrg$saving))
which(chrg$saving == max(chrg$saving))
chrg[which(chrg$saving == max(chrg$saving)), 1]
chrg[[which(chrg$saving == max(chrg$saving)), 1]]
str_replace(chrg[[which(chrg$saving == max(chrg$saving)), 1]], "-01", "")
d <- density(chrg$saving/ 1000, adjust = 1, na.rm = TRUE)
plot(d, main="KDE for savings ($1K) ", xlab='Power (kW)', col="red")
legend('topleft', legend=c("virtual meter", "aggregated 4 meters"),
col=c("red", "blue"), lty=1)
d <- density(chrg$saving/ 1000, adjust = 1, na.rm = TRUE)
plot(d, main="KDE for savings ($1K) ", xlab='Power (kW)', col="red")
legend('topleft', legend=c("Savings"),
col=c("red"), lty=1)
d <- density(chrg$saving/ 1000, adjust = 1, na.rm = TRUE)
plot(d, main="KDE for savings ($1K) ", xlab='Power (kW)', col="red")
abline(mean(d))
d <- density(chrg$saving/ 1000, adjust = 1, na.rm = TRUE)
plot(d, main="KDE for savings ($1K) ", xlab='Power (kW)', col="red")
abline(mean(chrg$saving))
d <- density(chrg$saving/ 1000, adjust = 1, na.rm = TRUE)
plot(d, main="KDE for savings ($1K) ", xlab='Power (kW)', col="red")
abline(v=mean(chrg$saving))
legend('topleft', legend=c("Savings"),
col=c("red"), lty=1)
d <- density(chrg$saving/ 1000, adjust = 1, na.rm = TRUE)
plot(d, main="KDE for savings ($1K) ", xlab='Power (kW)', col="red")
abline(v=mean(chrg$saving), col="blue")
legend('topleft', legend=c("Savings"),
col=c("red"), lty=1)
d <- density(chrg$saving/ 1000, adjust = 1, na.rm = TRUE)
plot(d, main="KDE for savings ($1K) ", xlab='Power (kW)', col="red")
abline(v=mean(chrg$saving/1000), col="blue")
legend('topleft', legend=c("Savings"),
col=c("red"), lty=1)
d <- density(chrg$saving/ 1000, adjust = 1, na.rm = TRUE)
plot(d, main="KDE for savings ($1K) ", xlab='Power (kW)', col="red")
abline(v=mean(chrg$saving/1000), col="blue")
legend('topleft', legend=c("Savings", "Average savings"),
col=c("red", "blue"), lty=1)
